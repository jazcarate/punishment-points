// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using PunishmentPointsApp.Repositories;
using System;

namespace PunishmentPointsApp.Migrations
{
    [DbContext(typeof(PunishmentContext))]
    [Migration("20180128220240_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("PunishmentPointsApp.Models.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IncomingMessageId");

                    b.Property<string>("MentionedId");

                    b.Property<string>("Text");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("IncomingMessageId");

                    b.HasIndex("MentionedId");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("PunishmentPointsApp.Models.IncomingMessage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChannelId");

                    b.Property<string>("FromId");

                    b.Property<DateTime>("LocalTimestamp")
                        .HasColumnType("date");

                    b.Property<string>("ServiceUrl");

                    b.Property<string>("Text");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.ToTable("IncomingMessages");
                });

            modelBuilder.Entity("PunishmentPointsApp.Models.Punishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("FromId");

                    b.Property<string>("Reason");

                    b.Property<string>("RecipientId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("FromId");

                    b.HasIndex("RecipientId");

                    b.ToTable("Punishments");
                });

            modelBuilder.Entity("PunishmentPointsApp.Models.TeamMember", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("PunishmentPointsApp.Models.Entity", b =>
                {
                    b.HasOne("PunishmentPointsApp.Models.IncomingMessage")
                        .WithMany("Entities")
                        .HasForeignKey("IncomingMessageId");

                    b.HasOne("PunishmentPointsApp.Models.TeamMember", "Mentioned")
                        .WithMany()
                        .HasForeignKey("MentionedId");
                });

            modelBuilder.Entity("PunishmentPointsApp.Models.IncomingMessage", b =>
                {
                    b.HasOne("PunishmentPointsApp.Models.TeamMember", "From")
                        .WithMany()
                        .HasForeignKey("FromId");
                });

            modelBuilder.Entity("PunishmentPointsApp.Models.Punishment", b =>
                {
                    b.HasOne("PunishmentPointsApp.Models.TeamMember", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("PunishmentPointsApp.Models.IncomingMessage", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("PunishmentPointsApp.Models.TeamMember", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");
                });
#pragma warning restore 612, 618
        }
    }
}
